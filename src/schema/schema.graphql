type Query {
  user: User
  users: [User]!
  product(id: ID!): Product
  products: [Product]!
}

type Mutation {
  signup(name: String!, email: String!, password: String!): User
  login(email: String!, password: String!): AuthData
  requestResetPassword(email: String!): Message!
  resetPassword(password: String!,token: String!): Message!
  createProduct(
    description: String!
    price: Float!
    imageUrl: String!
  ): Product!
  updateProduct(
    id: ID!
    description: String
    price: Float
    imageUrl: String
  ): Product!
  deleteProduct(id: ID!): Product! 
  addToCart(id: ID!): CartItem!
  deleteCart(id: ID!): CartItem!
}

scalar DateTime

type User {
  id: ID!
  name: String!
  email: String!
  products: [Product]
  carts: [CartItem]!
  createAt: DateTime!
}

type Product {
  id: ID!
  description: String!
  price: Float!
  imageUrl: String!
  user: User!
  createAt: DateTime!
}

type CartItem {
  id: ID!
  product: Product!
  quantity: Int!
  user: User!
  createAt: DateTime!
}

type AuthData {
  user: User
  jwt: String
}

type Message {
  message: String!
}
